<?php

namespace YAPF\Junk\Sets;

use YAPF\DbObjects\CollectionSet\CollectionSet as CollectionSet;
use YAPF\Junk\Models\Schoolpendingcontact as Schoolpendingcontact;

// Do not edit this file, rerun gen.php to update!
class SchoolpendingcontactSet extends CollectionSet
{
	public function __construct()
	{
		parent::__construct("YAPF\Junk\Models\Schoolpendingcontact");
	}
	/**
	 * getObjectByID
	 * returns a object that matchs the selected id
	 * returns null if not found
	 * Note: Does not support bad Ids please use findObjectByField
	 */
	public function getObjectByID($id): ?Schoolpendingcontact
	{
		return parent::getObjectByID($id);
	}
	/**
	 * getFirst
	 * returns the first object in a collection
	 */
	public function getFirst(): ?Schoolpendingcontact
	{
		return parent::getFirst();
	}
	/**
	 * getObjectByField
	 * returns the first object in a collection that matchs the field and value checks
	 */
	public function getObjectByField(string $fieldname, $value): ?Schoolpendingcontact
	{
		return parent::getObjectByField($fieldname, $value);
	}
	/**
	 * current
	 * used by foreach to get the object should not be called directly
	 */
	public function current(): Schoolpendingcontact
	{
		return parent::current();
	}
	/**
	 * uniqueIds
	 * returns unique values from the collection matching that field
	 * @return array<int>
	 */
	public function uniqueIds(): array
	{
		return parent::uniqueArray("id");
	}
	/**
	 * uniqueSchoolLinks
	 * returns unique values from the collection matching that field
	 * @return array<int>
	 */
	public function uniqueSchoolLinks(): array
	{
		return parent::uniqueArray("schoolLink");
	}
	/**
	 * uniqueUIDs
	 * returns unique values from the collection matching that field
	 * @return array<string>
	 */
	public function uniqueUIDs(): array
	{
		return parent::uniqueArray("UID");
	}
	/**
	 * uniqueUnixtimes
	 * returns unique values from the collection matching that field
	 * @return array<int>
	 */
	public function uniqueUnixtimes(): array
	{
		return parent::uniqueArray("unixtime");
	}
	/**
	 * uniqueContactNames
	 * returns unique values from the collection matching that field
	 * @return array<string>
	 */
	public function uniqueContactNames(): array
	{
		return parent::uniqueArray("contactName");
	}
	/**
	 * uniqueContactEmails
	 * returns unique values from the collection matching that field
	 * @return array<string>
	 */
	public function uniqueContactEmails(): array
	{
		return parent::uniqueArray("contactEmail");
	}
	/**
	 * uniqueContactPhonenumbers
	 * returns unique values from the collection matching that field
	 * @return array<string>
	 */
	public function uniqueContactPhonenumbers(): array
	{
		return parent::uniqueArray("contactPhonenumber");
	}
	/**
	 * uniqueContactMessages
	 * returns unique values from the collection matching that field
	 * @return array<string>
	 */
	public function uniqueContactMessages(): array
	{
		return parent::uniqueArray("contactMessage");
	}
	/**
	 * uniqueSents
	 * returns unique values from the collection matching that field
	 * @return array<bool>
	 */
	public function uniqueSents(): array
	{
		return parent::uniqueArray("sent");
	}
	/**
	 * uniqueMessagevieweds
	 * returns unique values from the collection matching that field
	 * @return array<bool>
	 */
	public function uniqueMessagevieweds(): array
	{
		return parent::uniqueArray("messageviewed");
	}
	// Loaders
	/**
	 * loadById
	 * @return mixed[] [status =>  bool, count => integer, message =>  string]
	*/
	public function loadById(
		int $id, 
		int $limit = 0, 
		string $orderBy = "id", 
		string $orderDir = "DESC"
	): array
	{
		return $this->loadByField(
			"id", 
			$id, 
			$limit, 
			$orderBy, 
			$orderDir
		);
	}
	/**
	 * loadFromIds
	 * @return array<mixed> [status =>  bool, count => integer, message =>  string]
	*/
	public function loadFromIds(array $values): array
	{
		return $this->loadIndexs("id", $values);
	}
	/**
	 * loadBySchoolLink
	 * @return mixed[] [status =>  bool, count => integer, message =>  string]
	*/
	public function loadBySchoolLink(
		int $schoolLink, 
		int $limit = 0, 
		string $orderBy = "id", 
		string $orderDir = "DESC"
	): array
	{
		return $this->loadByField(
			"schoolLink", 
			$schoolLink, 
			$limit, 
			$orderBy, 
			$orderDir
		);
	}
	/**
	 * loadFromSchoolLinks
	 * @return array<mixed> [status =>  bool, count => integer, message =>  string]
	*/
	public function loadFromSchoolLinks(array $values): array
	{
		return $this->loadIndexs("schoolLink", $values);
	}
	/**
	 * loadByUID
	 * @return mixed[] [status =>  bool, count => integer, message =>  string]
	*/
	public function loadByUID(
		string $UID, 
		int $limit = 0, 
		string $orderBy = "id", 
		string $orderDir = "DESC"
	): array
	{
		return $this->loadByField(
			"UID", 
			$UID, 
			$limit, 
			$orderBy, 
			$orderDir
		);
	}
	/**
	 * loadFromUIDs
	 * @return array<mixed> [status =>  bool, count => integer, message =>  string]
	*/
	public function loadFromUIDs(array $values): array
	{
		return $this->loadIndexs("UID", $values);
	}
	/**
	 * loadByUnixtime
	 * @return mixed[] [status =>  bool, count => integer, message =>  string]
	*/
	public function loadByUnixtime(
		int $unixtime, 
		int $limit = 0, 
		string $orderBy = "id", 
		string $orderDir = "DESC"
	): array
	{
		return $this->loadByField(
			"unixtime", 
			$unixtime, 
			$limit, 
			$orderBy, 
			$orderDir
		);
	}
	/**
	 * loadFromUnixtimes
	 * @return array<mixed> [status =>  bool, count => integer, message =>  string]
	*/
	public function loadFromUnixtimes(array $values): array
	{
		return $this->loadIndexs("unixtime", $values);
	}
	/**
	 * loadByContactName
	 * @return mixed[] [status =>  bool, count => integer, message =>  string]
	*/
	public function loadByContactName(
		string $contactName, 
		int $limit = 0, 
		string $orderBy = "id", 
		string $orderDir = "DESC"
	): array
	{
		return $this->loadByField(
			"contactName", 
			$contactName, 
			$limit, 
			$orderBy, 
			$orderDir
		);
	}
	/**
	 * loadFromContactNames
	 * @return array<mixed> [status =>  bool, count => integer, message =>  string]
	*/
	public function loadFromContactNames(array $values): array
	{
		return $this->loadIndexs("contactName", $values);
	}
	/**
	 * loadByContactEmail
	 * @return mixed[] [status =>  bool, count => integer, message =>  string]
	*/
	public function loadByContactEmail(
		string $contactEmail, 
		int $limit = 0, 
		string $orderBy = "id", 
		string $orderDir = "DESC"
	): array
	{
		return $this->loadByField(
			"contactEmail", 
			$contactEmail, 
			$limit, 
			$orderBy, 
			$orderDir
		);
	}
	/**
	 * loadFromContactEmails
	 * @return array<mixed> [status =>  bool, count => integer, message =>  string]
	*/
	public function loadFromContactEmails(array $values): array
	{
		return $this->loadIndexs("contactEmail", $values);
	}
	/**
	 * loadByContactPhonenumber
	 * @return mixed[] [status =>  bool, count => integer, message =>  string]
	*/
	public function loadByContactPhonenumber(
		string $contactPhonenumber, 
		int $limit = 0, 
		string $orderBy = "id", 
		string $orderDir = "DESC"
	): array
	{
		return $this->loadByField(
			"contactPhonenumber", 
			$contactPhonenumber, 
			$limit, 
			$orderBy, 
			$orderDir
		);
	}
	/**
	 * loadFromContactPhonenumbers
	 * @return array<mixed> [status =>  bool, count => integer, message =>  string]
	*/
	public function loadFromContactPhonenumbers(array $values): array
	{
		return $this->loadIndexs("contactPhonenumber", $values);
	}
	/**
	 * loadByContactMessage
	 * @return mixed[] [status =>  bool, count => integer, message =>  string]
	*/
	public function loadByContactMessage(
		string $contactMessage, 
		int $limit = 0, 
		string $orderBy = "id", 
		string $orderDir = "DESC"
	): array
	{
		return $this->loadByField(
			"contactMessage", 
			$contactMessage, 
			$limit, 
			$orderBy, 
			$orderDir
		);
	}
	/**
	 * loadFromContactMessages
	 * @return array<mixed> [status =>  bool, count => integer, message =>  string]
	*/
	public function loadFromContactMessages(array $values): array
	{
		return $this->loadIndexs("contactMessage", $values);
	}
	/**
	 * loadBySent
	 * @return mixed[] [status =>  bool, count => integer, message =>  string]
	*/
	public function loadBySent(
		bool $sent, 
		int $limit = 0, 
		string $orderBy = "id", 
		string $orderDir = "DESC"
	): array
	{
		return $this->loadByField(
			"sent", 
			$sent, 
			$limit, 
			$orderBy, 
			$orderDir
		);
	}
	/**
	 * loadFromSents
	 * @return array<mixed> [status =>  bool, count => integer, message =>  string]
	*/
	public function loadFromSents(array $values): array
	{
		return $this->loadIndexs("sent", $values);
	}
	/**
	 * loadByMessageviewed
	 * @return mixed[] [status =>  bool, count => integer, message =>  string]
	*/
	public function loadByMessageviewed(
		bool $messageviewed, 
		int $limit = 0, 
		string $orderBy = "id", 
		string $orderDir = "DESC"
	): array
	{
		return $this->loadByField(
			"messageviewed", 
			$messageviewed, 
			$limit, 
			$orderBy, 
			$orderDir
		);
	}
	/**
	 * loadFromMessagevieweds
	 * @return array<mixed> [status =>  bool, count => integer, message =>  string]
	*/
	public function loadFromMessagevieweds(array $values): array
	{
		return $this->loadIndexs("messageviewed", $values);
	}
	// Related loaders
	public function relatedSchools(): SchoolsSet
	{
		$ids = $this->uniqueSchoolLinks();
		$collection = new SchoolsSet();
		$collection->loadFromIds($ids);
		return $collection;
	}
}
